"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUsersTyping = exports.makeGetUsersTypingByChannelAndPost = void 0;

var _reselect = require("reselect");

var _common = require("./common");

var _preferences = require("./preferences");

var _user_utils = require("../../utils/user_utils");

// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.
// @flow
const getUsersTypingImpl = (profiles
/*: IDMappedObjects<UserProfile>*/
, teammateNameDisplay
/*: string*/
, channelId
/*: string*/
, parentPostId
/*: string*/
, typing
/*: Typing*/
) =>
/*: Array<string>*/
{
  const id = channelId + parentPostId;

  if (typing[id]) {
    const users = Object.keys(typing[id]);

    if (users.length) {
      return users.map(userId => {
        return (0, _user_utils.displayUsername)(profiles[userId], teammateNameDisplay);
      });
    }
  }

  return [];
};

const makeGetUsersTypingByChannelAndPost = () => {
  return ((0, _reselect.createSelector)(_common.getUsers, _preferences.getTeammateNameDisplaySetting, (state
  /*: GlobalState*/
  , options
  /*: {channelId: string, postId: string}*/
  ) =>
  /*: string*/
  options.channelId, (state
  /*: GlobalState*/
  , options
  /*: {channelId: string, postId: string}*/
  ) =>
  /*: string*/
  options.postId, (state
  /*: GlobalState*/
  ) =>
  /*: Typing*/
  state.entities.typing, getUsersTypingImpl)
  /*: (state: GlobalState, {channelId: string, postId: string}) => Array<string>*/
  );
};

exports.makeGetUsersTypingByChannelAndPost = makeGetUsersTypingByChannelAndPost;
const getUsersTyping
/*: (state: GlobalState) => Array<string>*/
= (0, _reselect.createSelector)(_common.getUsers, _preferences.getTeammateNameDisplaySetting, _common.getCurrentChannelId, state => state.entities.posts.selectedPostId, state => state.entities.typing, getUsersTypingImpl);
exports.getUsersTyping = getUsersTyping;