"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _redux = require("redux");

var _action_types = require("../../action_types");

var _helpers = require("./helpers");

// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.
// @flow
function server(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  if (action.type === _action_types.GeneralTypes.PING_RESET) {
    return (0, _helpers.initialRequestState)();
  }

  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.PING_REQUEST, _action_types.GeneralTypes.PING_SUCCESS, _action_types.GeneralTypes.PING_FAILURE, state, action);
}

function config(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.CLIENT_CONFIG_REQUEST, _action_types.GeneralTypes.CLIENT_CONFIG_SUCCESS, _action_types.GeneralTypes.CLIENT_CONFIG_FAILURE, state, action);
}

function dataRetentionPolicy(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.DATA_RETENTION_POLICY_REQUEST, _action_types.GeneralTypes.DATA_RETENTION_POLICY_SUCCESS, _action_types.GeneralTypes.DATA_RETENTION_POLICY_FAILURE, state, action);
}

function license(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.CLIENT_LICENSE_REQUEST, _action_types.GeneralTypes.CLIENT_LICENSE_SUCCESS, _action_types.GeneralTypes.CLIENT_LICENSE_FAILURE, state, action);
}

function websocket(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  if (action.type === _action_types.GeneralTypes.WEBSOCKET_CLOSED) {
    return (0, _helpers.initialRequestState)();
  }

  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.WEBSOCKET_REQUEST, _action_types.GeneralTypes.WEBSOCKET_SUCCESS, _action_types.GeneralTypes.WEBSOCKET_FAILURE, state, action);
}

function redirectLocation(state
/*: RequestStatusType*/
= (0, _helpers.initialRequestState)(), action
/*: GenericAction*/
)
/*: RequestStatusType*/
{
  return (0, _helpers.handleRequest)(_action_types.GeneralTypes.REDIRECT_LOCATION_REQUEST, _action_types.GeneralTypes.REDIRECT_LOCATION_SUCCESS, _action_types.GeneralTypes.REDIRECT_LOCATION_FAILURE, state, action);
}

var _default = ((0, _redux.combineReducers)({
  server,
  config,
  dataRetentionPolicy,
  license,
  websocket,
  redirectLocation
})
/*: (GeneralRequestsStatuses, GenericAction) => GeneralRequestsStatuses*/
);

exports.default = _default;